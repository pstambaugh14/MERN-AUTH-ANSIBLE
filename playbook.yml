---
- hosts: webservers
  remote_user: user
  gather_facts: true  
  vars_prompt:

    - name: mongoURI
      prompt: "What is your Mongodb URI"
      private: no

    - name: username
      prompt: "What is your Mongodb username?"
      private: no

    - name: password
      prompt: "What is your Mongodb password?"

  vars:
    username: "{{ username }}"
    password: "{{ password }}"
    mongoURI: "{{ mongoURI }}"
    remote_install_path: /opt/test/MERN-AUTH-ANSIBLE 
#    PWD:  

  tasks:
  - name: Printing the local environment variable in Ansible
    debug:
      msg: "{{ lookup('env','PWD') }}"
  - name: Stop all pm2 apps via systemctl (if first run, comment this)
    systemd:
      name: pm2-user.service
      state: stopped
    become: yes
    become_user: root
    become_method: sudo
  - name: Upgrade all pakages with yum
    yum:
      name: '*'
      state: latest
    become: yes
    become_user: root
    become_method: sudo
  - name: Add NodeSource Repo to yum
    shell: curl -sL https://rpm.nodesource.com/setup_10.x | sudo bash -
    become: yes
    become_user: root
    become_method: sudo
  - name: Update yum with newly added repos
    yum:
      name: '*'
      state: latest
  - name: Install node.js and npm
    yum:
      name: 'nodejs'
      state: latest
    become: yes
    become_user: root
    become_method: sudo
  - name: ansible create directory
    file:
      path: /opt/test/
      state: directory
    become: yes
    become_user: root
    become_method: sudo
  - name: Change Permissions to /opt directory
    shell: chmod 0754 -R /opt/test
    become: yes
    become_user: root
    become_method: sudo
  - name: Change Ownership of /opt/test/ recursively.
    shell: chown user:user -R /opt/test
    become: yes
    become_user: root
    become_method: sudo
  - name: Clear Workspace
    shell: cd /opt/test/ && rm -rf MERN-AUTH-ANSIBLE
  - name: Recreate Application Directory
    shell: mkdir /opt/test/MERN-AUTH-ANSIBLE
  - name: Git Clone Source Code
    shell: git clone https://github.com/rishipr/mern-auth.git /opt/test/MERN-AUTH-ANSIBLE
    args:
      creates: MERN-AUTH-ANSIBLE application root directory
      chdir: /opt/test
  - name: NPM INIT
    shell: npm init -y
    args:
      creates: dir for app
      chdir: /opt/test/MERN-AUTH-ANSIBLE
  - name: NPM Install package.json Dependencies
    npm:
      path: /opt/test/MERN-AUTH-ANSIBLE
  - name: Nodemon install via npm
    npm:
      name: nodemon
      path: /opt/test/MERN-AUTH-ANSIBLE
  - name: Replace package.json with necessary modified configs
    shell: rm -f package.json
  - name: Copy new package.json
    copy:
      src: package.json
      dest: /opt/test/MERN-AUTH-ANSIBLE/package.json
      owner: user
      group: user
      mode: '0644'
  - name: Parse template for keys.js URI
    lineinfile:
      path: /opt/test/MERN-AUTH-ANSIBLE/config/keys.js
      regexp: '^(.*)  mongoURI: "YOUR_MONGO_URI_HERE",(.*)$'
      line: '  mongoURI: "{{ mongoURI }}",'
  - name: Pass Credentials to keys.js
    shell: sed -i "s/user/{{ username|quote }}/g" /opt/test/MERN-AUTH-ANSIBLE/config/keys.js
  - name: Pass Creentials to keys.js
    shell: sed -i "s/<password>/{{ password|quote }}/g" /opt/test/MERN-AUTH-ANSIBLE/config/keys.js
  - name: Add firewall rules and SELinux configs 1/4
    shell: firewall-cmd --permanent --add-port=5000/tcp
    become: yes
    become_user: root
    become_method: sudo
  - name: Add firewall rules and SELinux configs 2/4
    shell: firewall-cmd --permanent --add-port=3000/tcp
    become: yes
    become_user: root
    become_method: sudo
  - name: Add firewall rules and SELinux configs 3/4
    shell: setenforce permissive
    become: yes
    become_user: root
    become_method: sudo
  - name: Configure SELinux to permissive mode 4/4
    shell: sed -i '7s/.*/SELINUX=permissive/' /etc/selinux/config
    become: yes
    become_user: root
    become_method: sudo
  - name: Reload firewalld / firewall-cmd to configure new settings
    shell: firewall-cmd --reload
    become: yes
    become_user: root
    become_method: sudo
  - name: Install and Configure pm2
    npm:
      name: pm2
      global: yes
      version: latest
      path: /opt/test/MERN-AUTH-ANSIBLE
    become: yes
    become_user: root
    become_method: sudo
#    shell: sudo npm install pm2@latest -g
  - name: Copy Start Script
    copy:
      src: pm2_start.sh
      dest: /opt/test/MERN-AUTH-ANSIBLE/pm2_start.sh
      owner: user
      group: user
      mode: '0644'
  - name: CHMOD Start Script
    shell: chmod +x /opt/test/MERN-AUTH-ANSIBLE/pm2_start.sh
  - name: Finalization of Dependencies for backend server and frontend client
    shell: npm install && npm run client-install
    args:
      chdir: /opt/test/MERN-AUTH-ANSIBLE
  - name: Audit Fix
    shell: npm audit fix
    become: yes
    become_user: root
    become_method: sudo
    args:
      chdir: /opt/test/MERN-AUTH-ANSIBLE
  - name: Start backend server and frontend client Services
    command: nohup ./pm2_start.sh  0<&- &>/dev/null &
    async: 45
    poll: 0
    args:
      chdir: /opt/test/MERN-AUTH-ANSIBLE
  - name: Copy systemctl.sh
    copy:
      src: systemctl.sh
      dest: /opt/test/MERN-AUTH-ANSIBLE/systemctl.sh
      owner: user
      group: user
      mode: '0754'
  - name: Execute systemctl.sh
    shell: /opt/test/MERN-AUTH-ANSIBLE/systemctl.sh
  - name: Execute awk shell script to integrate with systemctl
    shell: /opt/test/MERN-AUTH-ANSIBLE/awkvar
    become: yes
    become_user: root
    become_method: sudo
  - name: Copy pm2.sh
    copy:
      src: pm2.sh
      dest: /opt/test/MERN-AUTH-ANSIBLE/pm2.sh
      owner: user
      group: user
      mode: '0754'
  - name: Execute pm2.sh
    shell: /opt/test/MERN-AUTH-ANSIBLE/pm2.sh
  - name: Systemctl start and enable of pm2
    shell: systemctl start pm2-user.service && systemctl enable pm2-user.service
    become: yes
    become_user: root
    become_method: sudo
